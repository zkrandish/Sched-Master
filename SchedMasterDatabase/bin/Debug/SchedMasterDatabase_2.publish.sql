/*
Deployment script for SchedMasterDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SchedMasterDatabase"
:setvar DefaultFilePrefix "SchedMasterDatabase"
:setvar DefaultDataPath "C:\Users\zkara\AppData\Local\Microsoft\VisualStudio\SSDT\"
:setvar DefaultLogPath "C:\Users\zkara\AppData\Local\Microsoft\VisualStudio\SSDT\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (OPERATION_MODE = READ_WRITE, MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 8;
    END


GO
PRINT N'Creating Table [dbo].[ClassSessions]...';


GO
CREATE TABLE [dbo].[ClassSessions] (
    [ClassSessionId] INT           IDENTITY (1, 1) NOT NULL,
    [GroupId]        NVARCHAR (50) NOT NULL,
    [Day]            NVARCHAR (50) NOT NULL,
    [StartTime]      TIME (7)      NOT NULL,
    [EndTime]        TIME (7)      NOT NULL,
    PRIMARY KEY CLUSTERED ([ClassSessionId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Course]...';


GO
CREATE TABLE [dbo].[Course] (
    [CourseCode]   NVARCHAR (50)  NOT NULL,
    [CourseName]   NVARCHAR (50)  NOT NULL,
    [Description]  NVARCHAR (MAX) NOT NULL,
    [HoursPerWeek] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([CourseCode] ASC)
);


GO
PRINT N'Creating Table [dbo].[Enrollment]...';


GO
CREATE TABLE [dbo].[Enrollment] (
    [UserId]  INT           NOT NULL,
    [GroupId] NVARCHAR (50) NOT NULL,
    [Grade]   FLOAT (53)    NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC, [GroupId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Group]...';


GO
CREATE TABLE [dbo].[Group] (
    [GroupId]    NVARCHAR (50) NOT NULL,
    [CourseCode] NVARCHAR (50) NOT NULL,
    [UserId]     INT           NOT NULL,
    [Capacity]   INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([GroupId] ASC)
);


GO
PRINT N'Creating Table [dbo].[Login]...';


GO
CREATE TABLE [dbo].[Login] (
    [UserId]   INT           NOT NULL,
    [Password] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating Table [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [UserId]       INT           NOT NULL,
    [Role]         NVARCHAR (50) NOT NULL,
    [FirstName]    NVARCHAR (50) NOT NULL,
    [LastName]     NVARCHAR (50) NOT NULL,
    [DateOfBirth]  DATE          NOT NULL,
    [PhoneNumber]  NVARCHAR (50) NOT NULL,
    [EmailAddress] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_ClassSession_GroupId]...';


GO
ALTER TABLE [dbo].[ClassSessions] WITH NOCHECK
    ADD CONSTRAINT [FK_ClassSession_GroupId] FOREIGN KEY ([GroupId]) REFERENCES [dbo].[Group] ([GroupId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Enrollment_UserId]...';


GO
ALTER TABLE [dbo].[Enrollment] WITH NOCHECK
    ADD CONSTRAINT [FK_Enrollment_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([UserId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Enrollment_GroupId]...';


GO
ALTER TABLE [dbo].[Enrollment] WITH NOCHECK
    ADD CONSTRAINT [FK_Enrollment_GroupId] FOREIGN KEY ([GroupId]) REFERENCES [dbo].[Group] ([GroupId]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Program_CourseCode]...';


GO
ALTER TABLE [dbo].[Group] WITH NOCHECK
    ADD CONSTRAINT [FK_Program_CourseCode] FOREIGN KEY ([CourseCode]) REFERENCES [dbo].[Course] ([CourseCode]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_UserId]...';


GO
ALTER TABLE [dbo].[Group] WITH NOCHECK
    ADD CONSTRAINT [FK_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([UserId]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Login_UserId]...';


GO
ALTER TABLE [dbo].[Login] WITH NOCHECK
    ADD CONSTRAINT [FK_Login_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([UserId]) ON DELETE CASCADE;


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[ClassSessions] WITH CHECK CHECK CONSTRAINT [FK_ClassSession_GroupId];

ALTER TABLE [dbo].[Enrollment] WITH CHECK CHECK CONSTRAINT [FK_Enrollment_UserId];

ALTER TABLE [dbo].[Enrollment] WITH CHECK CHECK CONSTRAINT [FK_Enrollment_GroupId];

ALTER TABLE [dbo].[Group] WITH CHECK CHECK CONSTRAINT [FK_Program_CourseCode];

ALTER TABLE [dbo].[Group] WITH CHECK CHECK CONSTRAINT [FK_UserId];

ALTER TABLE [dbo].[Login] WITH CHECK CHECK CONSTRAINT [FK_Login_UserId];


GO
PRINT N'Update complete.';


GO
